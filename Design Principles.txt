Design Principles
---------------------

- Identify the aspects of your application that vary and separate them from what stays the same. 
take the parts that vary and encapsulate them, so that later you can alter or extend the parts that vary without affecting those that donâ€™t.

- Program to an interface, not an implementation.
program to an interface really means program to a supertype.

- Favor composition over inheritance.

- Strive for loosely coupled designs between objects that interact.
Loosely coupled designs allow us to build flexible OO systems that can handle change because they minimize the interdependency between objects.

- Classes should be open for extension, but closed for modification.
While it may seem like a contradiction, there are techniques for allowing code to be extended without direct modification.
Be careful when choosing the areas of code that need to be extended; applying the Open-Closed Principle EVERYWHERE is wasteful, unnecessary, and can lead to complex, hard to understand code.
